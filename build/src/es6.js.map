{"version":3,"sources":["../../src/es6.js"],"names":["Shape","id","x","y","setLocation","ars","name","a","b","console","log","toString","createCounter","counter","myFunction","increment","c1","c2","c3"],"mappings":"AAAA;;;;;;;;;;IAEMA,K;AACF,mBAAYC,EAAZ,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAAA;;AAAE;AACpB,aAAKF,EAAL,GAAUA,EAAV;AACA,aAAKG,WAAL,CAAiBF,CAAjB,EAAoBC,CAApB;AACA;AACA,aAAKE,GAAL,GAAW;AACNC,kBAAO;AACZ;AAFW,SAAX;AAIA,YAAIC,IAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAR;AACA,YAAIC,iCAAQ,KAAKH,GAAb,EAAJ;AACA;AACH;;AAED;;;;;;;;;;oCAMYH,C,EAAGC,C,EAAG;AAAE;AAChB,iBAAKD,CAAL,GAASA,CAAT;AACA,iBAAKC,CAAL,GAASA,CAAT;AACH;;;kCAESE,G,EAAI;AACVI,oBAAQC,GAAR,CAAY,aAAZ,EAA0B,KAAKL,GAA/B,EAAoC,KAApC;AACH;AACD;;;;;;;;sCAKc;AACV,mBAAO;AACHH,mBAAG,KAAKA,CADL;AAEHC,mBAAG,KAAKA;AAFL,aAAP;AAIH;;AAED;;;;;;;;mCAKU;AACN,gCAAiB,KAAKF,EAAtB;AACH;;;;;;AAELQ,QAAQC,GAAR,CAAY,OAAZ,EAAqB,IAAIV,KAAJ,CAAU,QAAV,EAAoBW,QAApB,EAArB;AACA;;AAEA;AACA,SAASC,aAAT,GAAyB;AACrB,QAAIC,UAAU,CAAd;AACA,QAAIN,IAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,CAAR;AACA,QAAIC,iBAAQD,CAAR,CAAJ;AACA,QAAMO,aAAa,SAAbA,UAAa,GAAW;AAC1BD,kBAAUA,UAAU,CAApB;AACA,eAAOA,OAAP;AACH,KAHD;AAIA,WAAOC,UAAP;AACH;AACD,IAAMC,YAAYH,eAAlB;AACA,IAAMI,KAAKD,WAAX;AACA,IAAME,KAAKF,WAAX;AACA,IAAMG,KAAKH,WAAX;AACAN,QAAQC,GAAR,CAAY,mBAAZ,EAAiCM,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC","file":"es6.js","sourcesContent":["'use strict';\n\nclass Shape{\n    constructor(id, x, y) { // constructor syntactic sugar\n        this.id = id;\n        this.setLocation(x, y);\n        //const key = Symbol('alsd');\n        this.ars = {\n             name : 'hello test',\n        //     [key] : 'shahid iqbal'\n        }\n        var a = ['a', 'b', 'c'];\n        var b = [...this.ars];\n        //this.setSymbol(10);\n    }\n    \n    /**\n     * Set shape location.\n     * \n     * @param {Number} - The x coordinate.\n     * @param {Number} - The y coordinate.\n     */\n    setLocation(x, y) { // prototype function\n        this.x = x;\n        this.y = y;\n    }\n    \n    setSymbol(ars){\n        console.log('es6 Symbol:',this.ars, '===');\n    }\n    /**\n     * Get shape location.\n     * \n     * @return {Object}\n     */\n    getLocation() {\n        return {\n            x: this.x,\n            y: this.y\n        };\n    }\n    \n    /**\n     * Get shape description.\n     * \n     * @return {String}\n     */\n    toString(){\n        return `Shape('${this.id}')`;\n    }\n}\nconsole.log('==+==', new Shape('shahid').toString());\n//new Shape('symbol');\n\n//closure function-\nfunction createCounter() {\n    let counter = 0;\n    let a = [1,2,3,4,5,6,7,8,9,10];\n    let b = {...a};\n    const myFunction = function() {\n        counter = counter + 1\n        return counter\n    }\n    return myFunction\n}\nconst increment = createCounter()\nconst c1 = increment()\nconst c2 = increment()\nconst c3 = increment()\nconsole.log('example increment', c1, c2, c3)"]}